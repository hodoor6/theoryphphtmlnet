Числа обозначают сами себя, например 1, 12, 145, а вот строки требуется брать в кавычки (одинарные или двойные - без разницы):

<?php
	'строка', "строка"; //это примеры строк


Разделителем целой и дробной части служит знак "точка". К примеру, число 10.754 - это дробь

 То есть, если ей передать число 9, вот так - sqrt(9), то на выходе получим число 3. Полученное число мы можем записать в какую-либо переменную или вывести на экран.

Давайте найдем корень из 25 и запишем в переменную $a:

<?php
	$a = sqrt(25); //в переменную $a запишется значение 5 (так как 25 - это 5 в квадрате)
?>

 Например, если переменная является пустой строкой '', то выведя ее содержимое на экран с помощью echo, мы ничего не увидим.

Вторая ситуация - когда переменная содержит строку с пробелами по краям, например:

<?php
	$a = '   строка  ';
	echo $a; //выведет 'строка' - без пробелов по краям
?>


 В PHP можно получить доступ к определенному символу строки по его номеру таким образом: $a[n] – n-ный символ строки (учтите, что нумерация идет с нуля):

<?php
	$a = 'abcde'; //в переменной $а будет хранится значение 'abcde'
	$b = $a[0]; //в переменной $b будет 'a'
	$b = $a[1]; //в переменной $b будет 'b'
	$b = $a[4]; //в переменной $b будет 'e'
?>

 Очень часто новички не понимают, что присваивание отличается от обычного равенства. Посмотрите следующий пример:

<?php
	$a = 1;
	$a = $a + 2;
?>

С точки зрения математики запись $a = $a + 2 абсурдна, но не с точки зрения программирования.

В данном случае переменная $a имела значение 1, а затем мы переменной $a присвоили новое значение - старое значение переменной $a плюс 2.

 Пусть у нас есть код echo ++a и код echo a++.

В первом случае переменная сначала увеличится на единицу, а потом выведется, а во втором случае - сначала выведется, а потом увеличится.


 В данном случае мы присваиваем переменной $a ее текущее значение, увеличенное на 2. Однако PHP позволяет записать этот код еще короче с помощью оператора +=:

Операции +=, -=, *=, /=

Мы уже рассматривали код, который демонстрирует сложности с операцией присваивания:

<?php
	$a = 2;
	$a = $a + 3;
?>

В данном случае мы присваиваем переменной $a ее текущее значение, увеличенное на 2. Однако PHP позволяет записать этот код еще короче с помощью оператора +=:

<?php
	$a = 1;
	$a += 3; //этот код полностью эквивалентен коду $a = $a + 3;
?>

Кроме того, существуют операторы -=, *=, /=, которые эквивалентны следующему коду:

<?php
	$a = 2;
	$a -= 3; //этот код полностью эквивалентен коду $a = $a - 3;

	$a = 2;
	$a *= 3; //этот код полностью эквивалентен коду $a = $a * 3;

	$a = 2;
	$a /= 3; //этот код полностью эквивалентен коду $a = $a / 3;
?>

Операция .=

Существует также операция .=:

<?php
	$str = 'abc';
	$str .= 'def'; //этот код полностью эквивалентен коду $str = $str . 'def';
?>
